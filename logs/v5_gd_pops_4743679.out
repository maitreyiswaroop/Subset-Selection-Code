Running grad_desc_populations_v3.py with the following parameters:
Using the OOF function
--m1 4 --m 20 --dataset-size 5000 --noise-scale 0.1 --corr-strength 0 --populations cubic_regression cubic_regression cubic_regression --num-epochs 100 --penalty-type Reciprocal_L1 --penalty-lambda 0.001 --learning-rate 0.1 --batch-size 5000 --optimizer-type adam --alpha-init random_2 --seed 17 --patience 30 --estimator-type if --base-model-type rf --param-freezing
Results will be saved in: ./results_v5/multi_population/run_9/

Running multi-population experiment (v5) with parameters:
{
    "m1": 4,
    "m": 20,
    "dataset_size": 5000,
    "noise_scale": 0.1,
    "corr_strength": 0.0,
    "populations": [
        "cubic_regression",
        "cubic_regression",
        "cubic_regression"
    ],
    "num_epochs": 100,
    "penalty_type": "Reciprocal_L1",
    "penalty_lambda": 0.001,
    "learning_rate": 0.1,
    "batch_size": 5000,
    "optimizer_type": "adam",
    "alpha_init": "random_2",
    "patience": 30,
    "param_freezing": true,
    "N_grad_samples": 25,
    "use_baseline": true,
    "estimator_type": "if",
    "base_model_type": "rf",
    "objective_value_estimator": "if",
    "plot_landscape": false,
    "plot_dims": null,
    "plot_mc": false,
    "seed": 17,
    "save_path": "./results_v5/multi_population/",
    "verbose": false,
    "pop_configs": [
        {
            "pop_id": 0,
            "dataset_type": "cubic_regression"
        },
        {
            "pop_id": 1,
            "dataset_type": "cubic_regression"
        },
        {
            "pop_id": 2,
            "dataset_type": "cubic_regression"
        }
    ],
    "script_version": "v5_reinforce_plot"
}
Using device: cuda
Using seed: 17
Budget for variable selection: 8
Population 0 - Meaningful indices: [ 0  1  5 15]
Population 0: Precomputing E[Y|X] and Term 1 using if/rf...
Population 0: Term 1 (orig scale) = 2825.1276
Population 0: Term 1 (standardized) = 0.6838
Population 1 - Meaningful indices: [0 1 3 4]
Population 1: Precomputing E[Y|X] and Term 1 using if/rf...
Population 1: Term 1 (orig scale) = 1681.0320
Population 1: Term 1 (standardized) = 0.8359
Population 2 - Meaningful indices: [ 0  1  7 16]
Population 2: Precomputing E[Y|X] and Term 1 using if/rf...
Population 2: Term 1 (orig scale) = 201.5387
Population 2: Term 1 (standardized) = 0.6189
Initializing alpha randomly around 2.0
Initialized alpha: [2.1233578 2.0940506 2.1190553 2.1707006 2.002988  2.0918252 2.0233932
 2.049138  2.1632385 2.003708  2.0464962 2.0832672 2.0500576 2.1247387
 2.1080892 2.0587645 2.017486  2.039304  2.0031013 2.0778756]

Starting optimization for 100 epochs...
Epoch 0/100 | EpTime: 41.18s (Obj: 40.58s, Grad: 0.48s) | WinPop: 1 | Robust Obj: 0.6575
Epoch 10/100 | EpTime: 40.74s (Obj: 40.42s, Grad: 0.32s) | WinPop: 1 | Robust Obj: 0.7511
Epoch 20/100 | EpTime: 40.90s (Obj: 40.59s, Grad: 0.31s) | WinPop: 1 | Robust Obj: 0.7762
Epoch 30/100 | EpTime: 40.10s (Obj: 39.78s, Grad: 0.31s) | WinPop: 1 | Robust Obj: 5.7816
Early stopping triggered at epoch 30 due to lack of improvement.

Optimization finished in 1269.92 seconds.
Best robust objective value achieved: 0.6575

--- Experiment Finished ---
Final Robust Objective (minimized): 0.6575
Final Alpha (best): [2.22335124 2.19405055 2.21905375 2.07070184 2.10298753 1.99182689
 2.12339187 1.94913948 2.06324124 1.90370846 1.94650638 1.98326802
 1.9500587  2.0247395  2.20808816 2.15876365 2.11748528 1.93930459
 2.10308003 2.17787528]
Selected Variables (indices, budget=8): [9, 17, 10, 7, 12, 11, 5, 13]
Selected Variables (alpha values): [1.90370846 1.93930459 1.94650638 1.94913948 1.9500587  1.98326802
 1.99182689 2.0247395 ]

Overall Performance:
  Recall: 0.2500
  Precision: 0.2500
  F1 Score: 0.2500

Population-wise Important Parameters:
  Population 0 - Meaningful indices: [0, 1, 5, 15]
  Population 1 - Meaningful indices: [0, 1, 3, 4]
  Population 2 - Meaningful indices: [0, 1, 7, 16]

Population-wise statistics for selected variables:
  Population 0: 1 out of 4 selected (25.00%)
  Population 1: 0 out of 4 selected (0.00%)
  Population 2: 1 out of 4 selected (25.00%)
Overall statistics:
  Min Percentage: 0.00%
  Max Percentage: 25.00%
  Median Percentage: 25.00%

Summary statistics saved to: ./results_v5/multi_population/run_9/summary_stats.txt
Full results dictionary saved to: ./results_v5/multi_population/run_9/results.json
